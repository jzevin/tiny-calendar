{"version":3,"file":"tiny-calendar.js","sources":["../src/CalendarEnums.ts","../src/CalendarDay.ts","../src/CalendarMonth.ts","../src/CalendarView.ts","../src/Calendar.ts"],"sourcesContent":["export enum DayOfTheWeek {\n  Sunday,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n}\n\nexport enum MonthOfTheYear {\n  January,\n  February,\n  March,\n  April,\n  May,\n  June,\n  July,\n  August,\n  September,\n  October,\n  November,\n  December,\n}\n","import Calendar from './Calendar';\nimport { DayOfTheWeek, MonthOfTheYear } from './CalendarEnums';\n\nexport default class CalendarDay {\n  private __name: string;\n  private __number: number;\n  private __monthOfTheYear: MonthOfTheYear;\n  private __year: number\n  constructor(dow: DayOfTheWeek, num: number, monthOfTheYear: MonthOfTheYear, year: number) {\n    if (dow === undefined || num === undefined) {\n      throw new Error('Must provide a valid day of the week and number.');\n    }\n    if (!Calendar.isBetween(num, 1, 31) && !Calendar.isIntAndNum(num)) {\n      throw new Error(`${num} Not a valid day number. Must be 1-31.`);\n    }\n    this.__name = DayOfTheWeek[dow];\n    this.__number = num;\n    this.__monthOfTheYear = monthOfTheYear;\n    this.__year = year;\n  }\n\n  public get name(): string {\n    return this.__name;\n  }\n\n  public get number(): number {\n    return this.__number;\n  }\n\n  public get year(): number {\n    return this.__year;\n  }\n\n  public get monthName(): string {\n    return MonthOfTheYear[this.__monthOfTheYear];\n  }\n\n  public toDate(): Date {\n    return new Date( `${this.monthName} ${this.number} ${this.year}` );\n  }\n}\n","import Calendar from './Calendar';\nimport CalendarDay from './CalendarDay';\nimport { MonthOfTheYear } from './CalendarEnums';\n\nexport default class CalendarMonth {\n  private __monthOfTheYear: MonthOfTheYear;\n  private __days: any[] = [];\n  private __year: number;\n\n  constructor(year: number, month: MonthOfTheYear) {\n    if (month === undefined || year === undefined) {\n      throw new Error('Must provide a valid month name and year.');\n    }\n    this.__monthOfTheYear = month;\n    this.__year = year;\n    for (let i = 1; i <= 31; i++) {\n      const date = new Date(`${this.name} ${i} ${year}`);\n      if (Calendar.isDate(date) && date.getMonth() === this.__monthOfTheYear) {\n        const day = new CalendarDay(date.getDay(), i, this.monthOfTheYear, this.year);\n        this.__days.push(day);\n      }\n    }\n  }\n\n  public get name(): string {\n    return MonthOfTheYear[this.__monthOfTheYear];\n  }\n\n  public get days() {\n    return this.__days;\n  }\n\n  public get year() {\n    return this.__year;\n  }\n\n  public get monthOfTheYear(): MonthOfTheYear {\n    return this.__monthOfTheYear;\n  }\n}\n","import Calendar from \"./Calendar\";\n\nconst html = `\n<header>\n    <h1>Calendar!</h1>\n</header>\n<section>\n    <p>body</p>\n</section>\n<footer>\n    <p>Footer</p>\n</footer>\n`;\n\nexport default class CalendarView {\n\n    private __calendar: Calendar;\n\n    public container: HTMLDivElement;\n    public el: HTMLElement;\n\n    constructor(el: HTMLElement, calendar: Calendar) {\n        this.container = document.createElement('div');\n        this.container.classList.add('tiny-cal-wrap');\n        this.container.innerHTML = html;\n        this.__calendar = calendar;\n        this.el = el;\n        this.el.appendChild(this.container);\n    }\n    \n    private init() {\n\n    }\n}","import { MonthOfTheYear, DayOfTheWeek } from './CalendarEnums';\nimport CalendarMonth from './CalendarMonth';\nimport CalendarView from './CalendarView';\n\nexport default class Calendar {\n\n  public static isDate(d: any): boolean {\n    return d instanceof Date && !isNaN(d.getDay());\n  }\n\n  public static isIntAndNum(num: any): boolean {\n    return Number.isInteger(num) && !Number.isNaN(num);\n  }\n\n  public static isBetween(num: number, min: number, max: number): boolean {\n    return num >= min && num <= max;\n  }\n\n  public static monthOfTheYear = MonthOfTheYear;\n   public static dayOfTheWeek = DayOfTheWeek;\n  \n  private __year: number = new Date().getFullYear();\n  private __month: CalendarMonth = new CalendarMonth(this.__year, new Date().getMonth());\n  private __view: CalendarView;\n\n  constructor(el: HTMLElement, year?: number, month?: MonthOfTheYear) {\n    year = year || this.__year;\n    month = month === MonthOfTheYear.January ? month : month === undefined ? this.__month.monthOfTheYear : month;\n    this.__year = year;\n    this.setMonth(month);\n    this.__view = new CalendarView(el, this);\n  }\n\n  public get year(): number {\n    return this.__year;\n  }\n\n  public setYear(year: number) {\n    this.__year = year;\n    this.setMonth(this.currentMonth.monthOfTheYear);\n  }\n\n  public setMonth(moty: MonthOfTheYear) {\n    this.__month = new CalendarMonth(this.year, moty);\n  }\n\n  public get currentMonth(): CalendarMonth {\n    return this.__month;\n  }\n\n  public nextMonth() {\n    let nextMonth = this.__month.monthOfTheYear + 1;\n    let year = this.__year;\n    if (nextMonth > 11) {\n      nextMonth = MonthOfTheYear.January;\n      this.__year++;\n    }\n    this.setMonth(nextMonth);\n  }\n\n  public previousMonth() {\n    let prevMonth = this.__month.monthOfTheYear - 1;\n    if (prevMonth < 0) {\n      prevMonth = MonthOfTheYear.December;\n      this.__year--;\n    }\n    this.setMonth(prevMonth);\n  }\n}"],"names":["DayOfTheWeek","MonthOfTheYear","CalendarDay","constructor","dow","num","monthOfTheYear","year","undefined","Error","Calendar","isBetween","isIntAndNum","__name","__number","__monthOfTheYear","__year","prototypeAccessors","name","this","number","monthName","toDate","Date","CalendarMonth","month","let","i","date","isDate","getMonth","day","getDay","__days","push","days","const","CalendarView","el","calendar","container","document","createElement","classList","add","innerHTML","__calendar","appendChild","init","getFullYear","January","__month","setMonth","__view","d","isNaN","Number","isInteger","min","max","setYear","currentMonth","moty","nextMonth","previousMonth","prevMonth","December"],"mappings":"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"}